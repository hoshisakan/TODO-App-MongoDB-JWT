upstream dotnet_kestrel_api {
    # server react_activity_backend:5132;
    server react_activity_backend:5133;
}

server {
    listen       80;
    listen  [::]:80;
    server_name  reactivities.servepics.com;

    #access_log  /var/log/nginx/host.access.log  main;

    # Redirects all traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server {
    listen       443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name  reactivities.servepics.com;

    #access_log  /var/log/nginx/host.access.log  main;

    # ssl certificate and key
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    
    # Diffie-Hellman parameters of DHE ciphers
    ssl_dhparam /etc/nginx/ssl/dhparam-2048.pem;

    ssl_session_timeout    1d;

    # ssl protocols setting
    ssl_protocols   TLSv1.2 TLSv1.3;

    # ssl ciphers setting
    ssl_ciphers    ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    ssl_session_cache         shared:SSL:10m;
    ssl_session_tickets    off;
    ssl_stapling    off;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    #TODO: local test can mark this line
    # add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.googleapis.com *.google-analytics.com connect.facebook.net; frame-src 'self' *.facebook.com s-static.ak.facebook.com;";

    # Redirects all traffic to dotnet kestrel server
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Redirects all traffic to dotnet kestrel server
    location ^~ /api {
        # proxy_pass http://dotnet_kestrel_api; # For dotnet core disable ssl in kestrel
        proxy_pass https://dotnet_kestrel_api; # For dotnet core enable ssl in kestrel
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        limit_req zone=one nodelay;
        client_max_body_size 200m;
    }

    location ^~ /chat {
        # proxy_pass http://dotnet_kestrel_api; # For dotnet core disable ssl in kestrel
        proxy_pass https://dotnet_kestrel_api; # For dotnet core enable ssl in kestrel

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        limit_req zone=one nodelay;
        client_max_body_size 200m;
    }

    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}